"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AirtopClient = void 0;
const Client_1 = require("../Client"); // alias the Fern generated client
const core = __importStar(require("../core"));
const utils_1 = require("../utils");
const AirtopSessions_1 = require("./AirtopSessions");
const AirtopWindows_1 = require("./AirtopWindows");
const AirtopRequests_1 = require("./AirtopRequests");
const AirtopFiles_1 = require("./AirtopFiles");
const version_1 = require("../version");
class AirtopClient {
    constructor(_options) {
        this._options = _options;
        this.batchOperate = (urls, operation, config) => __awaiter(this, void 0, void 0, function* () {
            return yield (0, utils_1.batchOperate)(urls, operation, this, config);
        });
        const version = version_1.SDK_VERSION;
        if (!_options.fetcher) {
            _options.fetcher = (req) => {
                return core.fetcher(Object.assign(Object.assign({}, req), { headers: Object.assign(Object.assign({}, req.headers), { 'x-airtop-sdk-source': 'javascript', 'x-airtop-sdk-version': version }) }));
            };
        }
        this._client = new Client_1.AirtopClient(_options);
        this.debug = (_options === null || _options === void 0 ? void 0 : _options.debug) || false;
    }
    setApiKey(apiKey) {
        this._options.apiKey = apiKey;
    }
    setEnvironment(environment) {
        this._options.environment = environment;
    }
    get sessions() {
        var _a;
        return ((_a = this._sessions) !== null && _a !== void 0 ? _a : (this._sessions = new AirtopSessions_1.AirtopSessions(this._options, this.debug)));
    }
    get windows() {
        var _a;
        return ((_a = this._windows) !== null && _a !== void 0 ? _a : (this._windows = new AirtopWindows_1.AirtopWindows(this, this._options, this._options.apiKey)));
    }
    get requests() {
        var _a;
        return ((_a = this._requests) !== null && _a !== void 0 ? _a : (this._requests = new AirtopRequests_1.AirtopRequests(this._options)));
    }
    get profiles() {
        return this._client.profiles;
    }
    get automations() {
        return this._client.automations;
    }
    get files() {
        var _a;
        return ((_a = this._files) !== null && _a !== void 0 ? _a : (this._files = new AirtopFiles_1.AirtopFiles(this._options)));
    }
    log(message) {
        if (this.debug) {
            console.log(message);
        }
    }
    warn(message) {
        console.warn(message);
    }
    error(err) {
        console.error(err);
    }
}
exports.AirtopClient = AirtopClient;
