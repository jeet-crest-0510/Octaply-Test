/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../index";
import * as Airtop from "../../../../api/index";
import * as core from "../../../../core";
import { SessionsEventsResponseSessionEvent } from "./SessionsEventsResponseSessionEvent";
import { SessionsEventsResponseFileEvent } from "./SessionsEventsResponseFileEvent";
import { SessionsEventsResponseCaptchaEvent } from "./SessionsEventsResponseCaptchaEvent";
import { SessionsEventsResponseStatus } from "./SessionsEventsResponseStatus";
import { SessionsEventsResponseError } from "./SessionsEventsResponseError";
import { SessionsEventsResponseWindowEvent } from "./SessionsEventsResponseWindowEvent";
export declare const SessionsEventsResponse: core.serialization.Schema<serializers.SessionsEventsResponse.Raw, Airtop.SessionsEventsResponse>;
export declare namespace SessionsEventsResponse {
    type Raw = SessionsEventsResponse.SessionEvent | SessionsEventsResponse.FileEvent | SessionsEventsResponse.CaptchaEvent | SessionsEventsResponse.Status | SessionsEventsResponse.Error | SessionsEventsResponse.WindowEvent;
    interface SessionEvent extends SessionsEventsResponseSessionEvent.Raw {
        event: "sessionEvent";
    }
    interface FileEvent extends SessionsEventsResponseFileEvent.Raw {
        event: "fileEvent";
    }
    interface CaptchaEvent extends SessionsEventsResponseCaptchaEvent.Raw {
        event: "captchaEvent";
    }
    interface Status extends SessionsEventsResponseStatus.Raw {
        event: "status";
    }
    interface Error extends SessionsEventsResponseError.Raw {
        event: "error";
    }
    interface WindowEvent extends SessionsEventsResponseWindowEvent.Raw {
        event: "windowEvent";
    }
}
