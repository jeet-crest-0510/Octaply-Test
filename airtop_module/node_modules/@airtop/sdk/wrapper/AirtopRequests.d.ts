import type * as Airtop from '../api';
import { Requests as RequestsClass, type Requests as RequestsNamespace } from '../api/resources/requests/client/Client';
export declare class AirtopRequests extends RequestsClass {
    readonly _options: RequestsNamespace.Options;
    constructor(_options: RequestsNamespace.Options);
    /**
     * Waits until a request is complete or times out
     *
     * @param requestId - The ID of the request to wait for.
     * @param timeoutSeconds - Maximum time to wait in seconds.
     * @param intervalSeconds - Polling interval in seconds.
     * @param requestOptions - Request-specific configuration.
     *
     * @example
     *     const result = await client.requests.waitForRequestCompletion("123e4567-e89b-12d3-a456-426614174000", 300)
     */
    waitForRequestCompletion(requestId: string, timeoutSeconds?: number, intervalSeconds?: number, requestOptions?: RequestsNamespace.RequestOptions): Promise<Airtop.RequestStatusResponse>;
}
